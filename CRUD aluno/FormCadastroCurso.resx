<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAACAkAAAJNU0Z0AUkBTAIBAQIB
        AAF4AQABeAEAARgBAAEYAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABYAMAARgDAAEBAQABIAYAASQa
        AANDAXcDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cBuQNXAbkDVwG5A1cB
        uQNPAZkYAAMFAQYDAAH/AwAB/wMAAf8DHAEn/wARAANYAeoDUAGfAx0BKQMdASkDHQEpAx0BKQMdASkD
        HQEpAx0BKQMdASkDHQEpAx0BKQMdASkDHQEpAx0BKQMdASkDOgFhAwAB/xQAA18B1QMPAf4EAANeAdcD
        AAH/AxwBJ/8AEAAB/ycAAf8DXAHrAzsBYxAAA1kBwAMdASkQAANbAeQDPAH3CAADXgHXAwAB/wMdASj/
        AAwAAf8kAANgAeADHAEnA00BkwMAAf8DOQH2CAADVQGvAyQBNBAAAxIBGAMAAf8DXAHWCAADXgHXAwAB
        /wMcASf/AAgAAf8kAAM0AVMDUQGkAzkBXgMjAfoDQAFxAzwB9wQAA1UBrwMkATQUAAMdASgDAAH/A1wB
        1ggAA14B1wMAAf8DHAEn/wAEAAH/KwAB/wMjAfoIAANAAXEDOQH2A1UBrwMkATQYAAMdASgDAAH/A1wB
        1ggAA14B1wMAAf8DHQEo/wAB/wcAAf8DAAH/AwAB/wNOAZgDCwEOAz8BbgM/AW4DPwFuBAADVgHuA0oB
        iQwAA0ABcQMAAf8DJAE0HAADHQEoAwAB/wNcAdYIAANeAdcDAAH/AxwBJ/sAAf8EAANNAfMEAAMqAUAD
        UQGhAwwBEANDAXYDQwF2A0MBdggAA1YB7gNKAYkMAANAAXEDOQH2IAADHQEoAwAB/wNeAdcIAANeAdcD
        AAH/AxwBJwQABAEDPgFqA1UBrQNVAa8DQwF2AwYBB9sAAf8EAANNAfMEAAMqAUADUQGhAxkBIgNTAaYD
        UwGmA1MBpgNTAaYDPwFsBAADVgHuA0oBiQwAA0ABcQM5AfYgAAMdASgDAAH/A14B1wgAA14B1wMAAf8D
        OQH4AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/Aw8B/gMbASXTAAH/BwAB/wMAAf8DAAH/A0sBjAMCAQMD
        KQE+AykBPgMpAT4DKQE+AxQBGwgAA1YB7gNKAYkMAANAAXEDOQH2IAADHQEoAwAB/wNcAdYEAAM3AVoD
        AAH/AyMB+gMYASEQAAMLAQ4DWAHqAwAB/wNOAZTPAAH/OAADVgHuA0oBiQgABAEDAAH/AzwB9yAAAx0B
        KAMAAf8DXgHdAwAB/wNTAacgAAM+AWsDAAH/A0QBeMsAAf8EAANUAfEDVAHxA1QB8QM9AWkoAANWAe4D
        SgGJBAEDAAH/Ax8BLANOAZYDRQF8IAADHQEoAwAB/wNbAc0oAANMAY4DAAH/AwIBA8cAAf8EAANNAfME
        AAMqAUADUQGhAykBPgNfAeUDXwHlA18B5QMEAQUYAANSAe8DAAH/Ax8BLAQAAykBPgNVAawgAANJAYYD
        AAH/MwAB/wNcAcvHAAH/BAADTQHzBAADKgFAA1EBoQQBAyYBOAMmATgDJgE4AyYBOAMRARYUAANVAa8D
        HgH8A1UBrAMzAVADAAH/AwsBDiMAAf8DWQHBMAADRAF7AwAB/8cAAf8HAAH/AwAB/wMAAf8DUgGgAxsB
        JQNVAawDVQGsA1UBrANVAawDQQFyFAADVQGvAyUBNgM9AWkDUgGgAwoBDScAAf8DLgFIMAADBQEGAwAB
        /8cAAf9AAANVAa8DJQE2MwAB/wMVAR03AAH/xwAB/wQAA0kBhgNJAYYDSQGGAx0BKCwAA1UBrwMlATYz
        AAH/AykBPjAABAEDAAH/xwAB/wQAAzwB9wM5AV4DSQGGA1EBoQM9AWgDAAH/AwAB/wMAAf8DCQEMDAAD
        RgGBA1IBowNSAaMDXgHiAyUBNjMAAf8DVAGrMAADOwFlAwAB/8cAAf8EAANNAfMEAAMqAUADUQGhHwAB
        /wNFAXwDKgFAA0sBjAMPAf40AANRAaIDAAH/CAADWQHBA14B4xAAA1ABnQMPAf4IAAMPAf4DWwHkxwAB
        /wQAAx4B/QNeAdcDYQHhA1EBoQM2AVcDAAH/AwAB/wMAAf8DAAH/A1sB0AMVAR0DWwHQBAADMAFMAw8B
        /j8AAf8DUgGgBAADFAEbAwAB/wMAAf8DTgHyA1sB5AMAAf8DAAH/AzoBYgQAAzcBWgMAAf8DDAEPxwAB
        /wQAAwsBDgMLAQ4DCwEOHAADHgEqA1kBuwMwAUwDDwH+QAADPQFpAwAB/wM7AWMIAANCAXQDXgHmA1QB
        8QNOAZcEAQQAAyMBMgMAAf8DVQGtywAB/ywAAx4BKgNcAecDDwH+SAADTwGbAwAB/wNeAdcEARQAA1YB
        swMAAf8DWwHNzAADJgE4AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8D
        AAH/Ax4B/VAAAyYBOAMAAf8DAAH/AwAB/wNhAeEDXgHdAwAB/wMAAf8DAAH/AzoBYv8AYQADHgEqA1UB
        rwNUAfEDRQH0A1cBvAMqAUDUAAFCAU0BPgcAAT4DAAEoAwABYAMAARgDAAEBAQABAQUAASABARYAA/8B
        AAHAAQABPwEHAv8GAAGAAQABHwEjAv8GAAG/AeMBzwExAv8GAAG/AeABzwEYAv8GAAG/AeABTwGMAX8B
        /wYAAb8B8wEPAcYBPwH/BgABoAETAY8B4wEfAf8GAAGoARkBzwHxAYgBHwYAAagBBAHnAfgBwAEHBgAB
        oAEGAXMB/AFDAcMGAAG/Af8BMQH+AQ8B8QYAAaEB/wGAAf8BHwH4BgABqAEPAcQB/wE/AfwGAAGoAQcB
        wAH/AT8B/AYAAaABBwHBAf8BPwH8BgABvwH/Ac8B/wE/Af4GAAGhAf8BzwH/AT8B/AYAAaABDgEPAf8B
        PwH8BgABqQH8AR8B/wEzAcwGAAGgAQEBPwH/AZABCAYAAaMB+AF/Af8BjAERBgABvwH4Av8BwwHjBgAB
        gAEBAv8B4AEHBgAE/wH4AR8GAAs=
</value>
  </data>
</root>